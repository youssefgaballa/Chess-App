Frontend:
-Ability to create custom chess pieces that can fight other chess pieces that also have powers.
- Boss chess pieces
-Tower defence mode (chess pieces move automatically). shoot pawns out of rooks.
-Players can join a 2 player game and turn it into a 3 player, etc game.
-Pieces can randomly fall from other games (when they're killed) into a current game (can track
the id of the piece and who it belonged to)
-add more custom chess pieces
-Add battle royale mode
- n x n chess board.
-hover on a piece to show all its previous moves (hover for about 2 seconds)
-undo redo chessboard
-pointer-environments
-flip board
-accessibility
-gray future moves if it's not you're move + add premoves.
- fix duplicate logic in chessSlice.ts
- rename updatePiecePosition, validMoves
- make sure setvalid moves is called only once per piece per move.
- castling, upgrading pieces
- create new action for changing last move and dispatch it after we set all the validmoves for each piece.

- Integration with map: if another player attacks the territory of another,
they can initiate a chess match (like bloons monkey city)

!!! Setup Workflow (github actions)

Backend: 
-add serverside rendering
- Authentication, Authorization, Message queues (RabbitMQ), kafka, streams, security,
-fix api tests so that correct authorization headers are passed (as if logged in)
- Replicate backend in .NET, spring boot, etc.
-make sure when user is deleted the teardown of the socket.io room, chat_rooms table row,etc  happens

General: 
-Js-docs, tests, dev-environments, kubernetes  




